version: '1.0'
stages:
- Validate
- Build
- Deploy
steps:
  configure_env:
    title: Configure Environment
    image: alpine
    commands:
    - cf_export CI=true
    - cf_export NODE_IMAGE=node:10.15.3
    - env | grep CF_
  install_dependecies:
    title: Install Dependecies
    image: ${{NODE_IMAGE}}
    commands:
    - echo node $(node --version)
    - echo npm $(npm --version)
    - echo yarn $(yarn --version)
    - yarn
  validation:
    type: parallel
    title: Validation
    stage: Validate
    steps:
      lint:
        title: Lint
        image: ${{NODE_IMAGE}}
        commands:
        - yarn lint
      perform_tests:
        title: Run Tests with Coverage
        image: ${{NODE_IMAGE}}
        environment:
        - CODECOV_TOKEN=acd60370-1c28-43f8-96ce-801a884cd204
        commands:
        - yarn cover
        - curl -s https://codecov.io/bash | bash -s
  build_styleguide:
    title: Build Styleguide
    stage: Build
    image: ${{NODE_IMAGE}}
    commands:
    - yarn styleguide:build
  run_chromatic:
    title: Run Chromatic
    stage: Build
    image: ${{NODE_IMAGE}}
    commands:
    - yarn chromatic --exit-zero-on-changes
  deployment:
    type: parallel
    title: Deploy All the Things
    stage: Deploy
    steps:
      deploy_styleguide:
        title: Deploy Styleguide
        stage: Deploy
        image: codefresh/s3copy
        environment:
        - AWS_ACCESS_KEY_ID=${{DEVELOPMENT_AWS_ACCESS_KEY}}
        - AWS_SECRET_ACCESS_KEY=${{DEVELOPMENT_AWS_SECRET}}
        commands:
        - ./deploy.sh "pebble.istreamplanet.net"
        when:
          condition:
            all:
              isTag: "'${{IS_TAG_PUSH}}' == 'true'"
      deploy_to_npm:
        title: Publishing To Npm
        type: npm-publish
        arguments:
          NPM_TOKEN: '${{NPM_TOKEN}}'
        when:
          condition:
            all:
              isTag: "'${{IS_TAG_PUSH}}' == 'true'"
